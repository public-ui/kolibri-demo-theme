{
	"name": "@give-me-a/package-name",
	"version": "1.0.0",
	"license": "MIT",
	"scripts": {
		"build": "unbuild",
		"build:watch": "nodemon --exec unbuild --ext css,js,json,scss,ts --watch src",
		"clear": "git clean -fdx",
		"lint": "eslint src && tsc --noemit",
		"format": "prettier --check src",
		"postinstall": "cd \"node_modules/@public-ui/sample-react/\" && npx playwright install",
		"prepack": "unbuild",
		"prepare": "rimraf .husky && husky install && npm-run-all prepare:husky:*",
		"prepare:husky:commitlint": "husky add .husky/commit-msg \"npx commitlint --edit $1\"",
		"prepare:husky:format": "husky add .husky/pre-push \"pnpm format\"",
		"xprepare:husky:lint": "husky add .husky/pre-commit \"pnpm lint\"",
		"prepare:husky:unused": "husky add .husky/pre-push \"pnpm unused\"",
		"start": "npm-run-all --parallel build:watch serve",
		"serve": "cross-env THEME_MODULE=\"`pwd`/dist\" THEME_EXPORT=DEMO npm --prefix \"node_modules/@public-ui/sample-react/\" start",
		"test": "THEME_MODULE=src THEME_EXPORT=DEMO kolibri-visual-test",
		"test-update": "THEME_MODULE=src THEME_EXPORT=DEMO kolibri-visual-test --update-snapshots theme-snapshots.spec.js",
		"unused": "knip",
		"update": "ncu -t minor -u -x rimraf,unbuild && ncu -x rimraf,unbuild"
	},
	"dependencies": {
		"@public-ui/schema": "2.0.3"
	},
	"devDependencies": {
		"@commitlint/cli": "18.5.0",
		"@commitlint/config-conventional": "18.5.0",
		"@public-ui/sample-react": "2.0.3",
		"@public-ui/visual-tests": "2.0.3",
		"@types/node": "ts5.3",
		"@typescript-eslint/eslint-plugin": "6.19.1",
		"@typescript-eslint/parser": "6.19.1",
		"cross-env": "7.0.3",
		"eslint": "8.56.0",
		"husky": "8.0.3",
		"nodemon": "3.0.3",
		"npm-run-all": "4.1.5",
		"npm-check-updates": "16.14.12",
		"knip": "4.2.1",
		"prettier": "3.2.4",
		"rimraf": "3.0.2",
		"rollup": "4.9.6",
		"rollup-plugin-postcss": "4.0.2",
		"typescript": "5.3.3",
		"unbuild": "1.2.1"
	},
	"peerDependencies": {
		"@public-ui/components": "2.0.3"
	},
	"sideEffects": false,
	"type": "module",
	"exports": {
		".": {
			"types": "./dist/index.d.ts",
			"import": "./dist/index.mjs",
			"require": "./dist/index.cjs"
		}
	},
	"main": "./dist/index.cjs",
	"module": "./dist/index.mjs",
	"types": "./dist/index.d.ts",
	"files": [
		"assets",
		"dist"
	]
}
