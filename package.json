{
	"name": "@give-me-a/package-name",
	"version": "1.0.0",
	"license": "MIT",
	"scripts": {
		"build": "unbuild",
		"build:watch": "nodemon --exec unbuild --ext css,js,json,scss,ts --watch src",
		"clear": "git clean -fdx",
		"lint": "eslint src && tsc --noemit",
		"format": "prettier --check src",
		"postinstall": "cd \"node_modules/@public-ui/sample-react/\" && npx playwright install",
		"prepack": "pnpm build",
		"prepare": "rimraf .husky && husky && npm-run-all prepare:husky:*",
		"prepare:husky:commitlint": "echo \"npx commitlint --edit $1\" >> .husky/commit-msg",
		"prepare:husky:format": "echo \"pnpm format\" >> .husky/pre-push",
		"prepare:husky:lint": "echo \"pnpm lint\" >> .husky/pre-commit",
		"prepare:husky:unused": "echo \"pnpm unused\" >> .husky/pre-push",
		"start": "npm-run-all --parallel build:watch serve",
		"serve": "cross-env THEME_MODULE=\"`pwd`/dist\" THEME_EXPORT=DEMO npm --prefix \"node_modules/@public-ui/sample-react/\" start",
		"test": "THEME_MODULE=dist THEME_EXPORT=DEMO kolibri-visual-test",
		"test-update": "THEME_MODULE=dist THEME_EXPORT=DEMO kolibri-visual-test --update-snapshots theme-snapshots.spec.js",
		"unused": "knip",
		"update": "ncu -t minor -u -x rimraf && ncu -x rimraf"
	},
	"dependencies": {
		"@public-ui/schema": "2.0.6"
	},
	"devDependencies": {
		"@commitlint/cli": "18.6.1",
		"@commitlint/config-conventional": "18.6.2",
		"@public-ui/sample-react": "2.0.8",
		"@public-ui/visual-tests": "2.0.6",
		"@types/node": "ts5.3",
		"@typescript-eslint/eslint-plugin": "7.0.2",
		"@typescript-eslint/parser": "7.0.2",
		"cross-env": "7.0.3",
		"eslint": "8.56.0",
		"husky": "9.0.11",
		"nodemon": "3.0.3",
		"npm-check-updates": "16.14.15",
		"npm-run-all": "4.1.5",
		"knip": "5.0.1",
		"prettier": "3.2.5",
		"rimraf": "3.0.2",
		"rollup": "4.12.0",
		"rollup-plugin-postcss": "4.0.2",
		"typescript": "5.3.3",
		"unbuild": "2.0.0"
	},
	"peerDependencies": {
		"@public-ui/components": "^2.0.6"
	},
	"sideEffects": false,
	"type": "module",
	"exports": {
		".": {
			"types": "./dist/index.d.ts",
			"import": "./dist/index.mjs",
			"require": "./dist/index.cjs"
		}
	},
	"main": "./dist/index.cjs",
	"module": "./dist/index.mjs",
	"types": "./dist/index.d.ts",
	"files": [
		"assets",
		"dist"
	]
}
